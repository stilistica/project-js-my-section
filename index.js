import{a as d,S as a}from"./assets/vendor-D-JDxJ7W.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();async function f(){try{const{data:r}=await d.get("https://portfolio-js.b.goit.study/api/reviews");return r}catch(r){console.error("Error",r)}}function p(r){const o=r.map(({_id:s,author:i,avatar_url:e,review:t})=>`
		<li class="swiper-slide review-card">
		<img src="${e}" alt="${i}"/>
		<div class="review-info">
		<h3>${i}</h3>
		<p>${t}</p>
		</div>
		</li>
		`).join("");return console.log(o),o}const w=document.querySelector(".reviews-container"),m=document.querySelector(".reviews-list"),l=document.querySelector(".reviews-error"),v=document.querySelector(".swiper-button-prev"),u=document.querySelector(".swiper-button-next");let c=!1;document.addEventListener("DOMContentLoaded",async()=>{try{let s=function(){v.toggleAttribute("disabled",o.isBeginning),u.toggleAttribute("disabled",o.isEnd)};const r=await f();if(console.log(r),!r||r.length===0){l.classList.remove("hidden"),l.classList.add("css-err-mes"),u.setAttribute("disabled","true"),c=!0;return}m.innerHTML=p(r);const o=new a(".swiper",{direction:"horizontal",loop:!1,navigation:{nextEl:".swiper-button-next",prevEl:".swiper-button-prev"},keyboard:{enabled:!0,onlyInViewport:!0},mousewheel:{invert:!0},resizeObserver:!0,slidesPerView:1,breakpoints:{768:{slidesPerView:2},1440:{slidesPerView:4}}});o.on("slideChange",s),s()}catch(r){c=!0,console.error(r)}});const b=new IntersectionObserver(r=>{r.forEach(o=>{c&&o.isIntersecting&&alert("Виникла помилка, спробуйте трохи пізніше")})},{threshold:.1});b.observe(w);
//# sourceMappingURL=index.js.map
